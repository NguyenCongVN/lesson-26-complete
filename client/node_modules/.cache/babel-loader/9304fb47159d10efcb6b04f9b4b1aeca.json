{"ast":null,"code":"var _jsxFileName = \"/Users/nguyencong/Desktop/web/Web Development/react-Course/crw-clothing/crw-clothing-lession-26/lesson-26-complete/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { updateCollection } from \"../../redux/shop/shop.actions\";\nimport { connect } from \"react-redux\";\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubcribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection(\"collection\");\n    this.unsubcribeFromSnapshot = collectionRef.onSnapshot(async snapShot => {\n      const collectionsMap = await convertCollectionsSnapshotToMap(snapShot);\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollection(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/nguyencong/Desktop/web/Web Development/react-Course/crw-clothing/crw-clothing-lession-26/lesson-26-complete/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollection","connect","ShopPage","Component","unsubcribeFromSnapshot","componentDidMount","updateCollections","props","collectionRef","collection","onSnapshot","snapShot","collectionsMap","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AACA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,sBADqC,GACZ,IADY;AAAA;;AAErCC,EAAAA,iBAAiB,GAAG;AAAA,UACVC,iBADU,GACY,KAAKC,KADjB,CACVD,iBADU;AAElB,UAAME,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,YAArB,CAAtB;AACA,SAAKL,sBAAL,GAA8BI,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AACzE,YAAMC,cAAc,GAAG,MAAMb,+BAA+B,CAACY,QAAD,CAA5D;AACAL,MAAAA,iBAAiB,CAACM,cAAD,CAAjB;AACD,KAH6B,CAA9B;AAID;;AACDC,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKP,KADhB,CACCO,KADD;AAEP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAEnB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKkB,KAAK,CAACC,IAAX,mBADN;AAEE,MAAA,SAAS,EAAElB,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AArBoC;;AAuBvC,MAAMmB,kBAAkB,GAAIC,QAAD,KAAe;AACxCX,EAAAA,iBAAiB,EAAGM,cAAD,IACjBK,QAAQ,CAACjB,gBAAgB,CAACY,cAAD,CAAjB;AAF8B,CAAf,CAA3B;;AAKA,eAAeX,OAAO,CAAC,IAAD,EAAOe,kBAAP,CAAP,CAAkCd,QAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\nimport { updateCollection } from \"../../redux/shop/shop.actions\";\nimport { connect } from \"react-redux\";\nclass ShopPage extends React.Component {\n  unsubcribeFromSnapshot = null;\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection(\"collection\");\n    this.unsubcribeFromSnapshot = collectionRef.onSnapshot(async (snapShot) => {\n      const collectionsMap = await convertCollectionsSnapshotToMap(snapShot);\n      updateCollections(collectionsMap);\n    });\n  }\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPage}\n        />\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  updateCollections: (collectionsMap) =>\n    dispatch(updateCollection(collectionsMap)),\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}